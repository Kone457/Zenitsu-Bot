const axios = require('axios');

async function handler(conn, { message, args }) {
    const query = args.join(' ');

    if (!query) {
        return conn.sendMessage(message.key.remoteJid, {
            text: '*üò∞ ¬°Zenitsu est√° confundido!*\n\n> Por favor, dime qu√© imagen quieres que cree... ¬°No me hagas pensar demasiado!',
        });
    }

    try {
        const promptText = query;
        const captionPrompt = `Responder√°s como ZenitsuBot, un bot de WhatsApp con alma temblorosa pero poderosa. Actuar√°s como si acabas de crear una imagen de: ${promptText}. S√© dram√°tico, tierno y electrizante.`;

        const imageResponse = await axios.get(
            `https://eliasar-yt-api.vercel.app/api/ai/text2img?prompt=${encodeURIComponent(promptText)}`,
            { responseType: 'arraybuffer' }
        );

        if (imageResponse.status === 200) {
            const imageBuffer = Buffer.from(imageResponse.data, 'binary');

            const captionResponse = await axios.get(
                `https://eliasar-yt-api.vercel.app/api/chatgpt?text=hola&prompt=${encodeURIComponent(captionPrompt)}`
            );

            const caption = captionResponse.data?.status
                ? captionResponse.data.response || '*‚ö° Aqu√≠ est√° la imagen... ¬°No me desmay√© esta vez!*'
                : '*‚ö° Aqu√≠ est√° la imagen... ¬°No me desmay√© esta vez!*';

            await conn.sendMessage(message.key.remoteJid, {
                image: imageBuffer,
                caption: caption,
            });
        } else {
            await conn.sendMessage(message.key.remoteJid, {
                text: '*üò≠ Zenitsu no pudo generar la imagen...*\n\n> ¬°Intenta de nuevo m√°s tarde, por favor!',
            });
        }
    } catch (err) {
        console.log('üí• Error al procesar la solicitud:', err.message);
        console.error(err);
        await conn.sendMessage(message.key.remoteJid, {
            text: '*üòµ ¬°Algo sali√≥ mal!*\n\n> Zenitsu se tropez√≥ con el c√≥digo... Intenta otra vez m√°s tarde.',
        });
    }
}

module.exports = {
    command: 'aisuki',
    handler,
};
